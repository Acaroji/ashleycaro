{
  "_args": [
    [
      {
        "raw": "customizr@^1.0.0-alpha",
        "scope": null,
        "escapedName": "customizr",
        "name": "customizr",
        "rawSpec": "^1.0.0-alpha",
        "spec": ">=1.0.0-alpha <2.0.0",
        "type": "range"
      },
      "/home/ashley/myportafolio/website-practice/ashley-first-website/node_modules/gulp-modernizr"
    ]
  ],
  "_from": "customizr@^1.0.0-alpha",
  "_hasShrinkwrap": false,
  "_id": "customizr@1.3.0",
  "_location": "/customizr",
  "_nodeVersion": "8.16.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/customizr_1.3.0_1556833804173_0.6338735556740607"
  },
  "_npmUser": {
    "name": "rejas",
    "email": "npm@veeck.de"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {
    "nice-try": "1.0.5",
    "path-key": "2.0.1",
    "semver": "5.7.1",
    "shebang-command": "1.2.0",
    "which": "1.3.1"
  },
  "_requested": {
    "raw": "customizr@^1.0.0-alpha",
    "scope": null,
    "escapedName": "customizr",
    "name": "customizr",
    "rawSpec": "^1.0.0-alpha",
    "spec": ">=1.0.0-alpha <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-modernizr"
  ],
  "_resolved": "https://registry.npmjs.org/customizr/-/customizr-1.3.0.tgz",
  "_shasum": "32cb20ee7b6adaf4143af2ae87dd3dbb762b2962",
  "_shrinkwrap": null,
  "_spec": "customizr@^1.0.0-alpha",
  "_where": "/home/ashley/myportafolio/website-practice/ashley-first-website/node_modules/gulp-modernizr",
  "author": {
    "name": "Richard Herrera"
  },
  "bin": {
    "customizr": "bin/customizr"
  },
  "bugs": {
    "url": "https://github.com/Modernizr/customizr/issues"
  },
  "customizr": {
    "dest": "build/modernizr-package.js",
    "files": {
      "src": [
        "test/{js,css}/*"
      ]
    }
  },
  "dependencies": {
    "colors": "^1.3.3",
    "cross-spawn": "^6.0.5",
    "fast-deep-equal": "^2.0.1",
    "glob": "^7.1.3",
    "lodash": "^4.17.11",
    "mkdirp": "^0.5.1",
    "modernizr": "^3",
    "nopt": "^4.0.1",
    "optimist": "^0.6.1",
    "promised-io": "^0.3.5"
  },
  "description": "Build out a lean, mean Modernizr machine.",
  "devDependencies": {
    "chai": "^4.2.0",
    "fs-extra": "^7.0.1",
    "mocha": "^6.1.4",
    "nexpect": "^0.6.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ZBnaJBTXD05tJPoG992dCFlUAt9AdhwCzHLWBJfbIDB9qkqRBJm8OkT6R5I0ZL97Qa4eJRe8GlCnW06i8ZYlfw==",
    "shasum": "32cb20ee7b6adaf4143af2ae87dd3dbb762b2962",
    "tarball": "https://registry.npmjs.org/customizr/-/customizr-1.3.0.tgz",
    "fileCount": 24,
    "unpackedSize": 181890,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcy2YMCRA9TVsSAnZWagAAVL0QAIoJpAH0BZgTAyk8EjRE\n2kTWQjqWmueLo92mRJ6+YiyUl60FxOAF4kZj8uin9fPwjznlp4dmccnT/uVl\ndcRaouINTdSKEq49gc29AMj1ZpxSBvk8YIT08F9Twf/0x9oAGN2U255GdHrK\nR9JT1A/gyqrjAZ4ga6W3A87lz6A7TvZbwLOxaYF79iVmBVryX+Fe/f7WHPSe\nGieI1SbGgCmUze0KL8c8k8x4CpUq/WDBzodSWo5WJotut0Q4nI0OeoRZhX7O\ncHNIiiHoqwk9yMXTXoqPb15VKkPdOS/QyQt9qeLmgfqZ7lHeram5EJZU9yGW\nzRuD+Wgj9z7HSSL1JAdqnx9hb3IMkjSMCJQhqf9SNv3EmRZYpOtfdhTClSaD\nWThtuMlYxKg2FJcKVwV1MuP3wmHe5K7AyOqmSFFtSzU08kA46v4XcKzjRFTl\nxea+W8g5Ws++aU1exX6P1nG21NMshI81RB7RvnymgIRNJJHItde8TKiZstUx\nA7tw5pDixypa/qc+4RLPdKIr6hTuBRjrlvLaJFY6HAHgewAcVT5SBAn5TGf9\nPNoLXmDDlShRJ9WUOaCBraXV2o9A0Ihc0a0JNYZFlr3kn2kuiimLPwB+IYs7\nb3AGaOVvc5tmzj1zilGyeDri0pAiGVpCZT20nVo+upPdwrHfGbjLPuHKcJhm\nI4vR\r\n=VjcN\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "58b2c6e81f7e438081c5437a6774e094fc94e225",
  "homepage": "https://github.com/Modernizr/customizr",
  "keywords": [
    "modernizr",
    "customizr"
  ],
  "license": "MIT",
  "main": "src",
  "maintainers": [
    {
      "name": "doctyper",
      "email": "rich@doctyper.com"
    },
    {
      "name": "metalshark",
      "email": "beechhorn@gmail.com"
    }
  ],
  "name": "customizr",
  "optionalDependencies": {},
  "readme": "# customizr\n\n[![Build Status](https://api.travis-ci.org/Modernizr/customizr.png?branch=master,develop)](https://travis-ci.org/Modernizr/customizr)\n\n[![NPM](https://nodei.co/npm/customizr.png?compact=true)](https://nodei.co/npm/customizr/)\n\n##### *tl;dr:* This tool crawls through your project files, gathers up your references to Modernizr tests and outputs a lean, mean Modernizr machine.\n\n`customizr` is a Modernizr builder for your project. It is based on the Modernizr team's [Modulizr](https://github.com/Modernizr/modernizr.com/blob/gh-pages/i/js/modulizr.js) tool.\n\nThis configurable task allows you to configure and export a custom Modernizr build. Use Modernizr's [annotated source](http://modernizr.com/downloads/modernizr-latest.js) for development, and let this tool worry about optimization.\n\nWhen you're ready to build, `customizr` will crawl your project for Modernizr test references and save out a minified, uglified, customized version using only the tests you've used in your JavaScript or (S)CSS.\n\n## Example\n\n### CSS / SCSS / LESS\n\nWhen going through css files, the crawler will not look for `display: flex` but rather if the code contains a css selector that is named like the Modernizr properties\n\n```\n.flexbox {\n  ...\n}\n```\n\nor\n\n```\n.no-flexbox {\n  ...\n}\n```\n\n### Javascript\n\nWhen going through javascript files, the crawler will look for Modernizr calls like this one:\n\n```\nif (!Modernizr.flexbox) {\n  ...\n}\n```\n\n## Use with Grunt\n\nA Grunt wrapper is available at: [https://github.com/Modernizr/grunt-modernizr](https://github.com/Modernizr/grunt-modernizr)\n\n## Use with Gulp\n\nA Gulp wrapper is available at: [https://github.com/rejas/gulp-modernizr](https://github.com/rejas/gulp-modernizr)\n\n## Getting Started\n\nInstall with npm: `npm install --save customizr`\n\n## Documentation\n\n### Command Line\n\n```\n./node-modules/.bin/customizr -c path/to/config\n```\n\n### Command Line Options\n\n```\n-h, --help           # Print options and usage\n-v, --version        # Print the version number\n-c, --config         # Path to your Modernizr config JSON file\n-f, --force          # Ignore cached versions and force build Modernizr\n```\n\n#### Config File\n\nA sample config file is below. Default values shown:\n\n```javascript\n{\n\t// Avoid unnecessary builds (see Caching section below)\n\t\"cache\" : true,\n\n\t// Path to the build you're using for development.\n\t\"devFile\" : false,\n\n\t// Path to save out the built file\n\t\"dest\" : false,\n\n\t// Based on default settings on http://modernizr.com/download/\n\t\"options\" : [\n\t\t\"addTest\",\n\t\t\"html5printshiv\",\n\t\t\"testProp\"\n\t],\n\n\t// By default, the build process is verbose\n\t\"quiet\" : false,\n\t\n\t// By default, source is uglified before saving\n\t\"uglify\" : true,\n\n\t// Define any tests you want to explicitly include\n\t\"tests\" : [],\n\n\t// Useful for excluding any tests that this tool will match\n\t// e.g. you use .notification class for notification elements,\n\t// but don’t want the test for Notification API\n\t\"excludeTests\": [],\n\n\t// By default, will crawl your project for references to Modernizr tests\n\t// Set to false to disable\n\t\"crawl\" : true,\n\n\t// Set to true to pass in buffers via the \"files\" parameter below\n\t\"useBuffers\" : false,\n\n\t// By default, this task will crawl all *.js, *.css, *.scss files.\n\t\"files\" : {\n\t\t\"src\": [\n\t\t\t\"*[^(g|G)runt(file)?].{js,css,scss}\",\n\t\t\t\"**[^node_modules]/**/*.{js,css,scss}\",\n\t\t\t\"!lib/**/*\"\n\t\t]\n\t},\n\n\t// Have custom Modernizr tests? Add them here.\n\t\"customTests\" : [],\n\t\n\t// Add custom prefix to Modernizr CSS classes\n\t\"classPrefix\" : '' \n}\n```\n\n###### **`cache`** (Boolean, optional)\nWhen true, `customizr` will avoid the expensive build process if a certain criteria is met (see [Caching](#caching) section below)\n\n###### **`devFile`** (String, optional)\nPath to the local build file you're using for development. This parameter is needed so `customizr` can skip your dev file when traversing your project to avoid triggering false positives. If you're using a remote file for development, set this option to `remote`.\n\nThis is an optional parameter. If you do not have a local devFile, set this option to `false`. Note that if this parameter is false and you have a local development file, it will find all Modernizr references from this file and will defeat the purpose of this tool.\n\n###### **`dest`** (String, optional)\nPath to save the customized Modernizr build. It defaults to `lib/modernizr-custom.js`.\n\nThis is an optional parameter. If undefined or falsy, `customizr` will return the result as a string and will not write to disk.\n\n###### **`options`** (Array, optional)\nAn array of extra configuration options. Check the extra section on [modernizr.com/download](http://modernizr.com/download/) for complete options. Defaults are as they appear on the official site.\n\nThis is an optional parameter.\n\n###### **`quiet`** (Boolean, optional)\nBy default, the build process is verbose. Set to true to build silently.\n\nThis is an optional parameter.\n\n###### **`uglify`** (Boolean, optional)\nBy default, the source is uglified before save. Set to false to disable.\n\nThis is an optional parameter.\n\n###### **`tests`** (Array, optional)\nDefine any tests you want to explicitly include. Check out the full set of test options [here](#ADD_LINK_LATER).\n\nThis is an optional parameter.\n\n###### **`excludeTests`** (Array, optional)\nUseful for excluding any tests that this tool will match. (e.g. you use .notification class for notification elements, but don’t want the test for Notification API).\n\nThis is an optional parameter.\n\n###### **`crawl`** (Boolean, optional)\nBy default, this task will crawl your project for references to Modernizr tests. Set to false to disable.\n\nThis is an optional parameter.\n\n###### **`useBuffers`** (Boolean, optional)\nWhen `true`, the `files` parameter will accept an array of buffers in lieu of lookup strings.\n\n###### **`files.src`** (Array, optional)\nWhen `crawl` = `true`, this task will crawl all `*.js`, `*.css`, `*.scss` files. You can override this by defining a custom `files.src` array. The object supports either:\n\n- An array of all [minimatch](https://github.com/isaacs/minimatch) options\n- An array of [Vinyl-style](https://github.com/wearefractal/vinyl) File buffers. `useBuffers` must be `true` to enable this functionality.\n\nThis is an optional parameter.\n\n###### **`customTests`** (Array, optional)\nHave custom Modernizr tests? Add paths to their location here. The object supports all [minimatch](https://github.com/isaacs/minimatch) options.\n\nThis is an optional parameter.\n\n###### **`classPrefix`** (String, optional)\nAdd custom prefix to Modernizr classes to avoid clashes with your preexisting class names.\n\nThis is an optional parameter.\n\n## Caching\n\nFor large projects, building a custom Modernizr file can be an expensive task. `customizr` does its best to avoid unnecessary builds by following a set criteria. When all of the following are met, it assumes that no changes are necessary:\n\n- If `customizr` has been previously run *AND*\n- If [`settings.cache`](#cache-boolean-optional) is true *AND*\n- If [`settings.dest`](#dest-string-optional) exists and is identical to the previous build *AND*\n- If the `customizr` version is identical to the previous build *AND*\n- If the `modernizr` dependency is identical to the previous build *AND*\n- If the current [`customizr` settings](#config-file) are identical to the previous build *THEN*\n\n`customizr` returns the cached data found in [`settings.dest`](#dest-string-optional)\n\n- If any of the preceding rules are falsy, the cache is invalidated.\n- If [`settings.cache`](#cache-boolean-optional) is falsy, the cache is invalidated.\n- If [`settings.dest`](#dest-string-optional) is not defined, the cache is invalidated.\n\n## Programmatic API\n\n### require(\"customizr\")(settings, callback)\n\n- `settings` — A settings object as described above in \"Config File\".\n- `callback` — A callback to execute when the task is finished\n\nYou can use `customizr` directly in your app if you prefer to not rely on the binary.\n\n```js\nvar modernizr = require(\"customizr\");\n\nvar settings = {\n\t\"cache\" : true,\n\t\"devFile\" : false,\n\t\"dest\" : false,\n\t\"options\" : [\n\t\t\"setClasses\",\n\t\t\"addTest\",\n\t\t\"html5printshiv\",\n\t\t\"testProp\"\n\t],\n\t\"uglify\" : true,\n\t\"tests\" : [],\n\t\"excludeTests\": [],\n\t\"crawl\" : true,\n\t\"useBuffers\": false,\n\t\"files\" : {\n\t\t\"src\": [\n\t\t\t\"*[^(g|G)runt(file)?].{js,css,scss}\",\n\t\t\t\"**[^node_modules]/**/*.{js,css,scss}\",\n\t\t\t\"!lib/**/*\"\n\t\t]\n\t},\n\t\"customTests\" : []\n};\n\nmodernizr(settings, function () {\n\t// all done!\n});\n```\n\n## License\nCopyright (c) 2013 Richard Herrera\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Modernizr/customizr.git"
  },
  "scripts": {
    "pretest": "node test/pretest.js",
    "test": "node test/runner.js"
  },
  "version": "1.3.0"
}
